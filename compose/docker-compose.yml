services:
  postgres:
    image: postgres:15.12-alpine
    environment:
      POSTGRES_DB: "sleepymaid"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sleepymaid"]
      interval: 10s
      timeout: 5s

  valkey:
    image: valkey/valkey:8.1-alpine
    volumes:
      - valkey-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "valkey-cli ping"]
      interval: 10s
      timeout: 5s

  ghost:
    image: ghost:5-alpine
    restart: unless-stopped
    expose:
      - 2368
    ports:
      - "2368:2368"
    environment:
      url: "https://blog.ecorte.xyz"
      database__client: "sqlite3"
      database__connection__filename: "/var/lib/ghost/content/data/ghost.db"
      mail__transport: "SMTP"
      mail__options__service: "Mailgun"
    volumes:
      - ghost-data:/var/lib/ghost/content

  sleepymaid:
    container_name: sleepymaid_sleepymaid
    build:
      context: ../
      dockerfile: ./docker/services/Dockerfile
    command: node --trace-warnings -r source-map-support/register services/sleepymaid/dist/index.js
    restart: unless-stopped
    depends_on:
      - "postgres"

  helper:
    container_name: sleepymaid_helper
    build:
      context: ../
      dockerfile: ./docker/services/Dockerfile
    command: node --trace-warnings -r source-map-support/register services/helper/dist/index.js
    restart: unless-stopped
    depends_on:
      - "postgres"

  watcher:
    container_name: sleepymaid_watcher
    build:
      context: ../
      dockerfile: ./docker/services/Dockerfile
    command: node --trace-warnings -r source-map-support/register services/watcher/dist/index.js
    restart: unless-stopped
    depends_on:
      - "postgres"
      - "valkey"

  clarity:
    container_name: sleepymaid_clarity
    build:
      context: ../
      dockerfile: ./docker/services/Dockerfile
    command: node --trace-warnings -r source-map-support/register services/clarity/dist/index.js
    restart: unless-stopped

  api:
    container_name: sleepymaid_api
    build:
      context: ../
      dockerfile: ./docker/services/Dockerfile
    command: node --trace-warnings -r source-map-support/register services/api/dist/index.js
    restart: unless-stopped
    depends_on:
      - "postgres"

  #website:
  #  build:
  #    context: ../
  #    dockerfile: ./docker/website/Dockerfile
  #    args:
  #      NEXT_PUBLIC_CLIENTVAR: 'clientvar'
  #  restart: unless-stopped
  #  expose:
  #    - 3000
  #  ports:
  #    - '3000:3000'
  #  environment:
  #    DATABASE_URL: 'postgresql://sleepymaid:admin@postgres:5432/sleepymaid'
  #    REDIS_URL: 'redis://redis:6379/0'
  #    NEXTAUTH_URL: 'http://localhost:3000'

  zipline:
    image: ghcr.io/diced/zipline
    ports:
      - "3002:3002"
    restart: unless-stopped
    environment:
      - CORE_RETURN_HTTPS=false
      - CORE_HOST=0.0.0.0
      - CORE_PORT=3002
      - CORE_LOGGER=true
    volumes:
      - "./uploads:/zipline/uploads"
      - "./public:/zipline/public"
    depends_on:
      - "postgres"

volumes:
  valkey-data:
    name: "sleepymaid-valkey-data"
    external: true
  postgres-data:
    name: "sleepymaid-postgres-data"
    external: true
  ghost-data:
    name: "sleepymaid-ghost-data"
    external: true
